# Generated by Django 3.2.15 on 2022-08-14 11:40

from django.db import migrations, models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('dojo', '0166_copy_sla_from_system_settings'),
    ]

    operations = [
        migrations.AddField(
            model_name='system_settings',
            name='disable_openproject_webhook_secret',
            field=models.BooleanField(default=False, help_text='Allows incoming requests without a secret (discouraged legacy behaviour)', verbose_name='Disable web hook secret'),
        ),
        migrations.AddField(
            model_name='system_settings',
            name='enable_openproject',
            field=models.BooleanField(default=False, verbose_name='Enable OpenProject integration'),
        ),
        migrations.AddField(
            model_name='system_settings',
            name='enable_openproject_web_hook',
            field=models.BooleanField(default=False, help_text='Please note: It is strongly recommended to use a secret below and / or IP whitelist the OpenProject server using a proxy such as Nginx.', verbose_name='Enable OpenProject web hook'),
        ),
        migrations.AddField(
            model_name='system_settings',
            name='openproject_minimum_severity',
            field=models.CharField(blank=True, choices=[('Critical', 'Critical'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Info', 'Info')], default='Low', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='system_settings',
            name='openproject_webhook_secret',
            field=models.CharField(help_text='Secret needed in URL for incoming OpenProject Webhook', max_length=64, null=True, verbose_name='OpenProject Webhook URL'),
        ),
        migrations.CreateModel(
            name='OpenProject_Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration_name', models.CharField(default='', help_text='Enter a name to give to this configuration', max_length=2000)),
                ('url', models.URLField(help_text='For more information how to configure OpenProject, read the DefectDojo documentation.', max_length=2000, verbose_name='OpenProject URL')),
                ('username', models.CharField(max_length=2000)),
                ('password', models.CharField(max_length=2000)),
                ('default_issue_type', models.CharField(choices=[('Task', 'Task'), ('Milestone', 'Milestone'), ('Phase', 'Phase'), ('Feature', 'Feature'), ('Epic', 'Epic'), ('Userstory', 'User story'), ('Bug', 'Bug'), ('Security', 'Security')], default='Bug', help_text='You can define extra issue types in settings.py', max_length=15)),
                ('issue_template_dir', models.CharField(blank=True, help_text='Choose the folder containing the Django templates used to render the OpenProject issue description. These are stored in dojo/templates/issue-trackers. Leave empty to use the default openproject_full templates.', max_length=255, null=True)),
                ('info_mapping_severity', models.CharField(help_text="Maps to the 'Priority' field in OpenProject. For example: Info", max_length=200)),
                ('low_mapping_severity', models.CharField(help_text="Maps to the 'Priority' field in OpenProject. For example: Low", max_length=200)),
                ('medium_mapping_severity', models.CharField(help_text="Maps to the 'Priority' field in OpenProject. For example: Medium", max_length=200)),
                ('high_mapping_severity', models.CharField(help_text="Maps to the 'Priority' field in OpenProject. For example: High", max_length=200)),
                ('critical_mapping_severity', models.CharField(help_text="Maps to the 'Priority' field in OpenProject. For example: Critical", max_length=200)),
                ('finding_text', models.TextField(blank=True, help_text='Additional text that will be added to the finding in OpenProject. For example including how the finding was created or who to contact for more information.', null=True)),
            ],
        ),
        migrations.AddField(
            model_name='notifications',
            name='openproject_update',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), help_text='OpenProject sync happens in the background, errors will be shown as notifications/alerts so make sure to subscribe', max_length=24, verbose_name='OpenProject problems'),
        ),
     ]
